# My_project3

Этот проект представляет собой веб-приложение с клиентским интерфейсом и административным API. Клиентский интерфейс отображает каталог продуктов, а административный API позволяет управлять продуктами (добавление, обновление, удаление). Проект использует Node.js с Express для серверной логики и предоставляет интерактивную документацию API через Swagger UI.

## Структура проекта

- **Клиентский интерфейс**: Обслуживает основное приложение, отображая каталог продуктов.
- **Админ-сервер**: Предоставляет API для административных задач и интерфейс администратора.

## Требования

- Node.js (рекомендуется версия 14 или выше)
- npm или yarn для управления зависимостями

## Установка

1. **Клонируйте репозиторий**:

   ```
   git clone https://github.com/Rino-0709/My_project3.git
   ```
2. **Перейдите в директорию проекта**:

   ```
   cd My_project3
   ```
3. **Установите зависимости**:
   - Для админ-сервера (и, возможно, клиента, в зависимости от структуры):

     ```
     cd admin-server
     npm install
     ```

## Запуск приложения

1. **Запустите админ-сервер**:

   - Перейдите в директорию `admin-server`:

     ```
     cd admin-server
     ```
   - Выполните:

     ```
     node server.js
     ```
   - Админ-сервер будет доступен по адресу `http://localhost:8080`.
     - Интерфейс администратора: `http://localhost:8080`
     - Документация API: `http://localhost:8080/api-docs`

2. **Запустите клиентский сервер** (если применимо):

   - Если есть отдельный сервер для клиентского интерфейса, перейдите в его директорию и выполните:

     ```
     node server.js
     ```
   - Клиентское приложение будет доступно по адресу `http://localhost:3000` (порт может отличаться).

**Примечание**: Убедитесь, что в директории `admin-server` существует файл `products.json`. Если его нет, создайте файл с пустым массивом `[]` для хранения данных о продуктах.

## Использование

- **Клиентский интерфейс**: После запуска сервера перейдите по адресу `http://localhost:3000` (или другой порт), чтобы просмотреть каталог продуктов.
- **Интерфейс администратора**: Перейдите по адресу `http://localhost:8080` для управления продуктами (добавление, редактирование, удаление).
- **Документация API**: Изучите интерактивную документацию API по адресу `http://localhost:8080/api-docs`, чтобы протестировать и понять доступные эндпоинты.

## Обзор API

Административный API предоставляет эндпоинты для управления продуктами. Ниже приведён краткий обзор ключевых эндпоинтов:

- **GET /products**: Получить список всех продуктов.
- **POST /products**: Добавить один или несколько новых продуктов.
- **PUT /products/:id**: Обновить существующий продукт по его ID.
- **DELETE /products/:id**: Удалить продукт по его ID.

Для получения подробной информации о каждом эндпоинте, включая форматы запросов и ответов, обратитесь к спецификации OpenAPI в файле `api-spec.yaml` или просмотрите интерактивную документацию по адресу `http://localhost:8080/api-docs`.

## Спецификация API

Файл `api-spec.yaml` является полной спецификацией API этого проекта. Он написан в формате YAML в соответствии со стандартом OpenAPI и используется для генерации интерактивной документации, доступной через Swagger UI.

